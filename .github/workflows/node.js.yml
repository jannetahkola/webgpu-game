# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: npm run test:coverage
      - name: Extract coverage percent
        id: extract
        run: |
          PCT=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          COLOR=red
          if (( $(echo "$PCT >= 80" | bc -l) )); then COLOR=success
          elif (( $(echo "$PCT >= 60" | bc -l) )); then COLOR=yellow
          fi
          echo "pct=${PCT}" >> $GITHUB_OUTPUT
          echo "color=${COLOR}" >> $GITHUB_OUTPUT
      - name: Update coverage Gist
        run: |
          JSON=$(jq -n \
            --arg pct "${{ steps.extract.outputs.pct }}%" \
            --arg color "${{ steps.extract.outputs.color }}" \
            '{schemaVersion:1,label:"coverage",message:$pct,color:$color}')

          curl -X PATCH "https://api.github.com/gists/c143032e310b793540a6d52cc5f22cd7" \
          -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "$(jq -n \
          --arg content "$JSON" \
          '{files: {"coverage-badge.json": {content: $content}}}')"
      - run: npm run lint
      - run: npm run prettier
      - name: Update CI Status Gist
        if: always()
        run: |
          STATUS=passing
          COLOR=success
          if [ "${{ job.status }}" != "success" ]; then
            STATUS=failing
            COLOR=red
          fi

          JSON=$(jq -n \
            --arg msg "$STATUS" \
            --arg color "$COLOR" \
            '{schemaVersion:1,label:"CI",message:$msg,color:$color}')

          curl -X PATCH "https://api.github.com/gists/d6da14282ba971e06fef7bdc92f0b53f" \
            -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg content "$JSON" '{files: {"ci-badge.json": {content: $content}}}')"
